Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table =  10000
vii. hours table = 10000
viii. photo table =  10000
ix. review table =  10000
x. tip table =  10000
xi. user table = 10000
	
******-----------SQL Code------------******
SELECT COUNT(*)
FROM table
******---------------------------******
******---------------------------******



2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =  10000														primary key: id
ii. Hours =  1562															foreign key: business_id
iii. Category =  2643														foreign key: business_id
iv. Attribute =  1115														foreign key: business_id
v. Review = id (primary key): 10000, business_id (foreign key): 8090, user_id (foreign key): 9581						
vi. Checkin = business_id: 493												foreign key: business_id
vii. Photo =  id (primary key): 10000, photo (foreign key): 6493										
viii. Tip = user_id (foreign key): 537, business_id (foreign key): 3979							
ix. User =  10000															primary key: id
x. Friend = 11																foreign key: user_id
xi. Elite_years =  2780														foreign key: user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

************** SQL Code **************
	SELECT COUNT(*)
		  , key
	FROM  table  
	GROUP BY key
***************************************


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
	
			SELECT COUNT(*)
			FROM user
			WHERE id IS NULL
			OR name IS NULL
			OR review_count IS NULL
			OR yelping_since IS NULL
			OR useful IS NULL
			OR funny IS NULL
			OR cool IS NULL
			OR fans IS NULL
			OR average_stars IS NULL
			OR compliment_hot IS NULL
			OR compliment_more IS NULL
			OR compliment_profile IS NULL
			OR compliment_cute IS NULL
			OR compliment_list IS NULL
			OR compliment_note IS NULL
			OR compliment_plain IS NULL
			OR compliment_cool IS NULL
			OR compliment_funny IS NULL
			OR compliment_writer IS NULL
			OR compliment_photos IS NULL
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1			 max: 5	 		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0 		 max: 5.0		 avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0 			max: 2 			avg: 0.0144

			
	iv. Table: Checkin, Column: Count
	
		min: 1 			max: 53 			avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0			 max: 2000 			avg: 24.2995
		
		
************** SQL Code **************

	SELECT MIN(Column),MAX(Column),AVG(Column)
	FROM table
	
***************************************


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
			SELECT city, review_count
			FROM business
			GROUP BY  city 
			ORDER BY review_count DESC	
	
	Copy and Paste the Result Below:
				
			+------------------------+--------------+
			| city                   | review_count |
			+------------------------+--------------+
			| Woodmere Village       |          242 |
			| Mount Lebanon          |          138 |
			| Charlotte              |          120 |
			| McMurray               |          112 |
			| North York             |          109 |
			| Enterprise             |           89 |
			| Matthews               |           77 |
			| Munroe Falls           |           74 |
			| Ahwatukee              |           69 |
			| Pittsburgh             |           68 |
			| Woodmere               |           68 |
			| Tolleson               |           65 |
			| Pineville              |           63 |
			| Carnegie               |           61 |
			| Macedonia              |           58 |
			| Markham                |           54 |
			| Whitchurch-Stouffville |           52 |
			| Windsor                |           50 |
			| Goodyear               |           49 |
			| Gibsonia               |           45 |
			| Summerlin              |           44 |
			| Peninsula              |           42 |
			| Richfield              |           42 |
			| Dormont                |           40 |
			| nboulder city          |           40 |
			+------------------------+--------------+
			(Output limit exceeded, 25 of 362 total rows shown)


	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

			SELECT Stars, SUM(review_count)
			FROM business
			WHERE city = "Avon"
			GROUP BY Stars
			
Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

			+-------+-------------------+
			| stars | SUM(review_count) |
			+-------+-------------------+
			|   1.5 |                10 |
			|   2.5 |                 6 |
			|   3.5 |                88 |
			|   4.0 |                21 |
			|   4.5 |                31 |
			|   5.0 |                 3 |
			+-------+-------------------+


ii. Beachwood

SQL code used to arrive at answer:


			SELECT Stars, SUM(review_count)
			FROM business
			WHERE city = "Beachwood"
			GROUP BY Stars
			

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
			+-------+-------------------+
			| stars | SUM(review_count) |
			+-------+-------------------+
			|   2.0 |                 8 |
			|   2.5 |                 3 |
			|   3.0 |                11 |
			|   3.5 |                 6 |
			|   4.0 |                69 |
			|   4.5 |                17 |
			|   5.0 |                23 |
			+-------+-------------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
			SELECT review_count, name
			FROM user
			ORDER BY review_count DESC
			LIMIT 3	
		
	Copy and Paste the Result Below:
		
			+--------------+--------+
			| review_count | name   |
			+--------------+--------+
			|         2000 | Gerald |
			|         1629 | Sara   |
			|         1339 | Yuri   |
			+--------------+--------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	There is no correlation, there are users with low num of neviews has a large num of fans, and vice versa

	
	
************** SQL Code **************

			SELECT name,review_count,fans
			FROM user
			ORDER BY fans DESC
	
***************************************


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:there are 1780 'love' word in the reviews and 232 'hate' word.

	
	SQL code used to arrive at answer:
	
	-- looking for 'love' in reviews
			SELECT COUNT(*)
			FROM review
			WHERE text LIKE "%love%"
---------------------------------------------------
	-- looking for 'hate' in reviews
			SELECT COUNT(*)
			FROM review
			WHERE text LIKE "%hate%"
	
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
				
			SELECT name,fans
			FROM user
			ORDER BY fans DESC
			LIMIT 10

	
	Copy and Paste the Result Below:

			+-----------+------+
			| name      | fans |
			+-----------+------+
			| Amy       |  503 |
			| Mimi      |  497 |
			| Harald    |  311 |
			| Gerald    |  253 |
			| Christine |  173 |
			| Lisa      |  159 |
			| Cat       |  133 |
			| William   |  126 |
			| Fran      |  124 |
			| Lissa     |  120 |
			+-----------+------+
	
		
SELECT b.name
      , b.city
      , b.stars AS stars
      , c.category
      , h.hours
FROM (business b  INNER JOIN category c
ON b.id = c.business_id)
INNER JOIN hours h ON h.business_id= b.id
WHERE b.city = "Phoenix" AND c.category = "Restaurants"
GROUP BY stars

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	I've picked "Phoenix" AND "Restaurants", distribution of hours is diffrent between the two groups,
	first is 5 but the second group between 9 and 22


			+----------------------------------------+---------+-------+-------------+----------------------+
			| name                                   | city    | stars | category    | hours                |
			+----------------------------------------+---------+-------+-------------+----------------------+
			| McDonald's                             | Phoenix |   2.0 | Restaurants | Saturday|5:00-0:00   |
			| Gallagher's                            | Phoenix |   3.0 | Restaurants | Saturday|9:00-2:00   |
			| Five Guys                              | Phoenix |   3.5 | Restaurants | Saturday|10:00-22:00 |
			| Bootleggers Modern American Smokehouse | Phoenix |   4.0 | Restaurants | Saturday|11:00-22:00 |
			| Charlie D's Catfish & Chicken          | Phoenix |   4.5 | Restaurants | Saturday|11:00-18:00 |
			+----------------------------------------+---------+-------+-------------+----------------------+



ii. Do the two groups you chose to analyze have a different number of reviews?
    YES, first group has 8 rating_count, but the reating_count in the second grop differ between 60 and 431
		except star 4.5 which has only 7 rating
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	I think NO, all these restaurants at diffrent addresses
			
			
			+----------------------------------------+---------+-------+-------------+----------------------+--------------+-------------------------+
		| name                                   | city    | stars | category    | hours                | review_count | address                 |
		+----------------------------------------+---------+-------+-------------+----------------------+--------------+-------------------------+
		| McDonald's                             | Phoenix |   2.0 | Restaurants | Saturday|5:00-0:00   |            8 | 1850 S 7th St           |
		| Gallagher's                            | Phoenix |   3.0 | Restaurants | Saturday|9:00-2:00   |           60 | 751 E Union Hls Dr      |
		| Five Guys                              | Phoenix |   3.5 | Restaurants | Saturday|10:00-22:00 |           63 | 2641 N 44th St, Ste 100 |
		| Bootleggers Modern American Smokehouse | Phoenix |   4.0 | Restaurants | Saturday|11:00-22:00 |          431 | 3375 E Shea Blvd        |
		| Charlie D's Catfish & Chicken          | Phoenix |   4.5 | Restaurants | Saturday|11:00-18:00 |            7 | 1153 E Jefferson St     |
		+----------------------------------------+---------+-------+-------------+----------------------+--------------+-------------------------+


SQL code used for analysis:


			SELECT b.name
				  , b.city
				  , b.stars AS stars
				  , c.category
				  , h.hours
				  , b.review_count
				  , b.address
			FROM (business b  INNER JOIN category c
			ON b.id = c.business_id)
			INNER JOIN hours h ON h.business_id= b.id
			WHERE b.city = "Phoenix" AND c.category = "Restaurants"
			GROUP BY stars

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
    The one that is open has much more review_count (504), but the one that is closed has much less review_count (4)    
         
ii. Difference 2:
         
    The one that is open has more stars (~3), but the one that is closed has  less stars (2)    



		+---------------+---------------------+---------------------+-----------+-----------------+----------------+---------+
		|  AVG(b.stars) | SUM(b.review_count) | AVG(b.review_count) | city      | COUNT(r.useful) | COUNT(r.stars) | is_open |
		+---------------+---------------------+---------------------+-----------+-----------------+----------------+---------+
		|           2.0 |                   4 |                 4.0 | Champaign |               1 |              1 |       0 |
		| 2.96153846154 |                 504 |       38.7692307692 | Belmont   |              13 |             13 |       1 |
		+---------------+---------------------+---------------------+-----------+-----------------+----------------+---------+

        
         
SQL code used for analysis:


			SELECT AVG(b.stars)
				  , SUM(b.review_count)
				  , AVG(b.review_count)
				  ,b.city
				  ,COUNT(r.useful)
				  ,COUNT(r.stars)
				  , b.is_open
				  
			FROM business b INNER JOIN review r ON b.id = r.id
			GROUP BY b.is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
    Some alanysis on some types of food   ("Chinese","Mexican","French","Italian","Korean","Japanese","Indian")   
         
		 
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
        I need to join  category and business to get some information about the food as Number_Of_Resturants and AVG(stars) 
			and  AVG(review_count)  and city.
		I found that Mexican food is exist most at 28 Resturants with avg stars 3.625.
		
iii. Output of your finished dataset:
					 					 				 			 
					 
			+----------+----------------------+---------------+-------------------+-----------+
			| category | Number_Of_Resturants |    AVG(stars) | AVG(review_count) | city      |
			+----------+----------------------+---------------+-------------------+-----------+
			| Korean   |                    7 |           4.5 |               8.0 | Toronto   |
			| French   |                   12 |           4.0 |     135.083333333 | Las Vegas |
			| Chinese  |                   13 | 3.76923076923 |     423.230769231 | Las Vegas |
			| Mexican  |                   28 |         3.625 |              73.0 | Edinburgh |
			| Italian  |                   13 | 3.53846153846 |     78.2307692308 | Montréal  |
			| Japanese |                   20 |         3.475 |             22.85 | Toronto   |
			+----------+----------------------+---------------+-------------------+-----------+

        
iv. Provide the SQL code you used to create your final dataset:
			SELECT c.category
				  , COUNT(b.name) AS Number_Of_Resturants
				  ,AVG(stars),AVG(review_count)
				  ,b.city
				  
			FROM business b INNER JOIN category c ON c.business_id = b.id
			WHERE c.category IN ("Chinese","Mexican","French","Italian",
								  "Korean","Japanese","Indian")
			GROUP BY c.category
			ORDER BY AVG(stars) DESC
